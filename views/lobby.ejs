<%- include('partials/header'); %>

<div class="container-fluid">
    <div class="row pt-3 pb-3">
        <div class="col-sm">
            <div class="border">
                <div class="overflow-auto p-2" style="height: 250px;">
                    <!-- Get messages here! -->
                    Chat messages go here
                </div>
                <div class="border rounded">
                    <input type="text" class="w-100">
                </div>
            </div>
        </div>
        <div class="col-sm">
            <form action=<%=`/lobby/${lobbyID}/upload`%> enctype="multipart/form-data" method="POST">
                <% if (lobbyState === undefined) { %>
                    <input type="file" name="saveFile" id="saveFile">
                <% } else { %>
                    <input type="file" name="saveFile" id="saveFile" disabled>
                <% } %>

                <% if (lobbyState === undefined) { %>
                    <button type="submit" class="btn btn-muted" id="uploadButton" disabled>Upload Save File</button>
                <% } else if (lobbyState === "UPLOAD_SUCCESS" || lobbyState === "UPLOADS_FULL") { %>
                    <button type="submit" class="btn btn-success" id="uploadButton" disabled>Upload Successful</button>
                <% } %>
            </form>
            <form action=<%=`/lobby/${lobbyID}/swap`%> method="POST" id="swapButtonForm">
                <% if (lobbyState === undefined) { %>
                    <button type="submit" class="btn btn-muted w-100" id="swapButton" disabled>Please upload save file...</button>
                <% } else if (lobbyState === "UPLOAD_SUCCESS") { %>
                    <button type="submit" class="btn btn-muted w-100" id="swapButton" disabled>Waiting on other players...</button>
                <% } else if (lobbyState === "UPLOADS_FULL") { %>
                    <button type="submit" class="btn btn-primary w-100" id="swapButton">Swap Save Data</button>
                <% } %>
            </form>
        </div>
    </div>
</div>

<div class="p3 mb-3">
    <form action="/logout" method="POST">
        <button class="btn btn-primary" type="submit">Logout</button>
    </form>
</div>

<script>

// access document elements
var upload_button = document.getElementById('uploadButton');
var swap_button = document.getElementById('swapButton');
var file_upload = document.getElementById('saveFile');
var swap_button_form = document.getElementById('swapButtonForm');

// determine lobby url
const lobby_url = "/lobby/" + "<%=lobbyID%>";

// predefine upload check
async function checkUploads() {
    while(true) {
            const uploads_remaining = await fetch(lobby_url + "/check-uploads", {
                method: 'get',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                },
            }).then(res=>res.json()).then(res=>res['remaining']);
            if (uploads_remaining === undefined) {
                console.log('is problem')
            } else if (uploads_remaining === 0) {
                break;
            } else {
                swap_button.innerText = `Waiting on ${uploads_remaining} players...`;
            }
            await new Promise(res => setTimeout(res, 3000));
        }

        // when all ready, change button to ready and update state
        swap_button.className = "btn btn-primary w-100";
        swap_button.disabled = false;
        swap_button.innerText = "Swap Save Data";
}

// aesthetic disabling for upload button
file_upload.addEventListener('change', async () => {
    if (file_upload.value === ""){
        upload_button.disabled = true;
        upload_button.className = "btn btn-muted";

        // send state update to server
        const result = await fetch(lobby_url + "/update-lobby-status", {
            method: 'post',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                lobby_state: undefined,
            })
        });

    } else {
        upload_button.disabled = false;
        upload_button.className = "btn btn-primary";
    }
});

// check server for upload status
upload_button.addEventListener('click', async () => {
    // TODO: could limit number of tries and set sleep time ?
    //upload_button.disabled = true;
    while(true){
        var status_result = await fetch(
            lobby_url + "/check-upload-success", {
                method: 'get',
                headers: {
                    'Accept': 'application/json'
                }
            }
        ).then(res=>res.json()).then(res=>res['status']);
        if(status_result != 'NONE'){
            break;
        }
    }
    if (status_result === 'UPLOADED'){
        // lock out more uploads
        upload_button.className = "btn btn-success";
        upload_button.disabled = true;
        upload_button.innerText = "Upload Successful";

        swap_button.innerText = "Waiting on other players...";

        file_upload.disabled = true;

        // send state update to server
        const result = await fetch(lobby_url + "/update-lobby-status", {
            method: 'post',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                lobby_state: 'UPLOAD_SUCCESS',
            })
        });

        // check for other player upload statuses
        await checkUploads();
        // no need to update server state (it's updated when uploads remaining is 0)

    } else {
        upload_button.className = "btn btn-danger";
        // TODO: flash error message
    }
});

// check server for swapping status
swap_button.addEventListener('click', async () => {
    //swap_button.disabled = true;
    while(true) {
        var status_result = await fetch(
            lobby_url + "/check-swap", {
                method: 'get',
                headers: {
                    'Accept': 'application/json',
                },
            }
        ).then(res=>res.json());
        if (status_result['remaining']=== undefined){
            console.log('is problem');
        } else if (status_result['remaining'] === 0) {
            if (status_result['downloads']) {
                break;
            }
            else {
                swap_button.innerText = 'Running Swap...';
                swap_button.className = "btn btn-success w-100";
                swap_button.disabled = true;
            }
        } else {
            swap_button.innerText = `Waiting on ${status_result['remaining']} players...`;
            swap_button.className = "btn btn-success w-100";
            swap_button.disabled = true;
        }
        await new Promise(res => setTimeout(res, 3000));
    }

    // change button to download (could also check for successful swapping)
    // TODO: send update to server for state preserving reloadability
    swap_button_form.action = lobby_url + "/download";
    swap_button.disabled = false;
    swap_button.className = "btn btn-primary w-100";
    swap_button.innerText = "Download";

});

</script>

<% if (lobbyState === "UPLOAD_SUCCESS") { %>
    <script>
    document.addEventListener("DOMContentLoaded", async () => {
        await checkUploads();
    });
    </script>
<% } %>

<%- include('partials/footer'); %>